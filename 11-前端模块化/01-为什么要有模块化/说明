在开发早期，通常都会将代码组织在多个js文件中进行维护，可是当多人开发时，就出现了问题
出现全局变量同名的问题、另外这种代码的编写方式对js文件的依赖顺序几乎是强制性的
用匿名函数解决变量冲突问题，可是又带来了新的问题：代码可复用性降低

解决方法：使用模块作为出口，在匿名函数内部，定义一个对象
给对象添加各种需要暴露到外面的属性和方法，最后将这个对象返回，并且在外面使用一个module接受
例：
let ModuleA = (function(){
  //1.定义一个对象
  let obj = {}
  //2.在对象内部添加变量和方法
  obj.flag = true
  obj.myFunc = function(info){
    console.log(info)
  }
  //3.将对象返回
  return obj
})()
常见的模块化规范：
CommonJS（需要依赖一定的环境才能被解析）、AMD、CMD、也有ES6的Modules

