认识plugin:
plugin是插件，通常是用于对某个现有架构进行扩展，loader主要是用于转换某些类型的模块，它是一个转换器
plugin是插件，它是对webpack本身的扩展，是一个扩展器
plugin的使用过程：
一：通过npm安装需要使用的plugin(某些webpack已经内置的插件不需要安装)
二：在webpack.config.js中的plugins中配置插件

1.添加版权信息的插件：BannerPlugin属于webpack自带的插件
plugins: [
    new webpack.BannerPlugin('最终版权归copy所有')
]

2.HtmlWebpackPlugin插件：自动生成一个index.html文件（可以指定模板来生成），将打包的js文件，自动通过script标签插入到body中
安装：npm i html-webpack-plugin --save-dev
配置：
 plugin: [
     new htmlWebpackPlugin({
         template: 'index.html'
     })
 ]

error:
先声明一下，由于我使用的是webpack4.0以上的版本，因此vue-loader也得是最新的版本才能匹配上，这样打包就不会报Cannot read property 'vue' of undefined这个错误了！！！！

3.uglifyjs-webpack-plugin@1.1.1 --save-dev 是对js文件进行压缩
配置：plugins: [
    new uglifyJsPlugin()
]


搭建本地服务器：
可以实现我们想要的让浏览器自动刷新显示我们修改后的结果
安装：npm i --save-dev webpack-dev-server@2.9.1
devserver也是作为webpack中的一个选项，选项本身可以设置如下属性：
contentBase为哪一个文件夹提供本地服务，默认是根文件夹，我们这里要填写./dist
port端口号
inline 页面实时刷新
historyApiFallback在SPA页面中，依赖HTML5的history模式
配置：devServer: {
    contentBase: './dist',
    inline: true
  }
我们可以在package.json里面script配置一个：
"dev": "webpack-dev-server --open"    --open参数表示直接打开浏览器